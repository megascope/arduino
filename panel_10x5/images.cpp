#include "images.h"

bool XBM::is_pixel(Unit x, Unit y) const {
    #ifdef DEBUG
    char buffer[40];
    Unit origx = x;
    #endif

    if (x > width || y > height) {
        #ifdef DEBUG
        sprintf(buffer, "is_pixel range error: %d>%d or %d>%d", x, width, y, height);
        Serial.println(buffer);
        #endif
        return false;
    }

    // find the byte that contains this pixel
    unsigned int i = elements_per_row * y;

    Unit element;
    while ( x >= 8 ) {
        x -= 8;
        ++i;
    }

    // which bit do we need
    DataByte bit = 1 << x;
    DataByte value = pgm_read_byte(&xbm[i]);

    #ifdef DEBUG
    sprintf(buffer, "%d/%d, i: %d bit: %d element: %0x pixel: %d", origx, y, i, bit, value, (value & bit));
    Serial.println(buffer);
    #endif
 
    return value & bit;
}
 
const DataByte PROGMEM happy_diwali_xbm[] = {
 0x33,0x3f,0x3f,0x3f,0x33,0x3c,0xcc,0x98,0x9f,0xc1,0x18,0x00,
 0xf0,0x33,0x33,0x33,0x33,0x33,0xcc,0xcc,0x98,0x99,0xc1,0x98,
 0xff,0xf3,0x3f,0x3f,0x3f,0x3f,0x3f,0xcc,0xcc,0x9a,0x9f,0xc1,
 0x18,0x00,0xf0,0x33,0x33,0x03,0x03,0x0c,0xcc,0xcc,0x9f,0x99,
 0xcf,0x80,0xff,0xf3,0x33,0x33,0x03,0x03,0x0c,0x3c,0xcc,0x98,
 0x99,0xcf,0x18,0x00,0xf0};

const XBM XBM::happy_diwali(100, 5, happy_diwali_xbm);

// test image for calibration 50x5
const DataByte PROGMEM test_xbm[] = {
 0x87,0xc3,0xff,0x60,0x60,0x60,0xfc,0xc7,0x41,0xfd,0x98,0x61,
 0x60,0xfc,0xe7,0xfc,0xfd,0x98,0x81,0x19,0xfc,0x70,0x14,0xfc,
 0x06,0x86,0x19,0xfc,0x38,0x1c,0xfc,0x07,0x06,0x06,0xfc};
const XBM XBM::test(50, 5, test_xbm);
